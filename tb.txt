# CONTEXTE SP√âCIFIQUE √Ä MON APP
"Voici ma structure actuelle des fichiers de tableau blanc :"

# COPIE-COLLE TON CODE ACTUEL DE :
- Whiteboard.tsx
- tldraw configuration  
- SessionClient.tsx (partie tableau blanc)
- Tout composant li√© au TB

# BESOINS EXACTS :
"Je veux que quand le professeur dessine, les 10 √©l√®ves voient le dessin en temps r√©el avec moins de 100ms de latence, sans co√ªt mensuel."

# CONTRAINTES TECHNIQUES :
"- Pas de modification de mon plan Pusher actuel
- Utiliser WebRTC qui est d√©j√† impl√©ment√© pour la vid√©o
- Garder tldraw comme moteur de dessin
- Solution qui scale jusqu'√† 11 users minimum"

üöÄ R√âSULTAT ATTENDU

Un hook useWhiteboardSync optimis√© pour 11 users

Une modification de Whiteboard.tsx avec 10 lignes max

Un serveur de signaling gratuit (Socket.io sur Render)

La configuration WebRTC pour les Data Channels

Le fallback Pusher pour la fiabilit√©



**FICHIERS √Ä MODIFIER OU A CREER:**
- /src/components/Whiteboard.tsx 
- /src/hooks/useWhiteboardSync.ts 
- /src/lib/whiteboard-actions.ts 
- /src/app/api/whiteboard/sync/route.ts 

**PRIORIT√âS :**
1. Stabilit√© √† 11 users
2. Co√ªt 0$
3. Performance du dessin
4. Int√©gration facile